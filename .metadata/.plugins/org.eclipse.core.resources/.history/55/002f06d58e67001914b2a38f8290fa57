package com.talentos.aluguel.controller;

import java.util.List;
import java.util.Optional;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.Mapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.server.ResponseStatusException;
import com.talentos.aluguel.model.Livro;
import com.talentos.aluguel.repository.LivroRepository;

/*
 * GET http://localhost:8080/livros
 */

@RequestMapping("/livros")
public class Livroscontroller  {
	
	@Autowired
	private LivroRepository livros;
	
	@GetMapping
	public List<Livro> listarLivros() {
		return livros.findAll();
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Livro> buscar(@PathVariable Long id) {
		Optional<Livro> livro = livros.findById(id);
		if (livro.equals(null)) { 
			// Em caso de ser nulo o sistema retorna um erro 404 ao invés de null
			return ResponseEntity.notFound().build();
		}
		
		return ResponseEntity.ok(livro.get());
	
	}
	
	@PostMapping
	@ResponseStatus(HttpStatus.CREATED)
	public Livro adicionar (@Valid @RequestBody Livro livro) {
		Optional<Livro> livroDuplicado = livros.findByTitulo(livro.getTitulo());
		if(livroDuplicado.isPresent()) {
			throw new ResponseStatusException(HttpStatus.BAD_REQUEST, "Título já cadastrado");
		}
		
		return livros.save(livro);
	}
	
	@PostMapping
	@ResponseStatus(HttpStatus.FOUND)
	public void remover (Long id) {
		Optional<Livro> livro = livros.findById(id);
		if (!livro.isPresent()) {
			throw new ResponseStatusException(HttpStatus.BAD_REQUEST, "Título não encontrado");
		}
		livros.deleteById(id);
	}
	
	@PostMapping
	public void editar (Long id) {
		return null;
		
	}
	
}

